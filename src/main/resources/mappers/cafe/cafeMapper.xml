<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.ca2sa.cafe.CafeMapper">
    <update id="updCafe">
        UPDATE cafe
        <set>
            <if test="cafeName != null and cafeName != ''">
                cafeName = #{cafeName}
            </if>
            <if test="location != null and location != ''">
                ,location = #{location}
            </if>
            <if test="tel != null and tel != ''">
                ,tel = #{tel}
            </if>
            <if test="cafePic != null and cafePic != ''">
                ,cafePic = #{cafePic}
            </if>
            <if test="closeTime != null and closeTime != ''">
                ,closeTime = #{closeTime}
            </if>
            <if test="openTime != null and openTime != ''">
                ,openTime = #{openTime}
            </if>
            <if test="longitude != null">
                ,longitude = #{longitude}
            </if>
            <if test="latitude != null">
                ,latitude = #{latitude}
            </if>
        </set>
        WHERE cafeId = #{cafeId}
    </update>

    <update id="updCafeOrder">
        UPDATE `order`
        SET orderProgress = #{orderProgress}
        WHERE orderId = #{orderId}
    </update>

    <select id="cafeEmailCheck">
        SELECT email
        FROM cafe
        WHERE email =#{email}
    </select>
    <insert id="insCafe" useGeneratedKeys="true" keyProperty="cafeId">
        INSERT INTO cafe
        SET

        cafeName = #{cafeName}, location = #{location}, tel = #{tel}, cafePic = #{cafePic},
        closeTime = #{closeTime}, openTime = #{openTime}, email = #{email},
        apw = #{apw}, businessNumber = #{businessNumber}, agree = #{agree},
        latitude = #{latitude}, longitude = #{longitude}

    </insert>

    <select id="signInCafe">
        SELECT cafeId, apw, email
        FROM cafe
        WHERE email = #{email}
    </select>

    <select id="selSumPriceWeekOfDay">
        SELECT
        DATE(e.createdAt) AS orderDate,
        SUM(a.count * (b.price + d.addprice)) AS daySumPrice
        FROM order_menu a
        LEFT JOIN menu b
        ON a.menuId = b.menuId
        LEFT JOIN order_menu_option c
        ON a.orderMenuId = c.orderMenuId
        LEFT JOIN menu_option d
        ON c.menuOptionId = d.menuOptionId
        LEFT JOIN `order` e
        ON e.orderId = a.orderId
        WHERE e.createdAt BETWEEN #{daysAgo} AND '${today} 23:59:59'
        AND e.cafeId = #{cafeId}
        AND e.orderProgress = #{orderProgress}
        GROUP BY DATE(e.createdAt)
    </select>

    <select id="selCafe">
        SELECT
        cafeName, location, tel, cafePic, openTime, closeTime
        FROM cafe
        where cafeId = #{cafeId}
    </select>

    <select id="selAllCafe">
        select
        ROUND(6371000  * ACOS(COS(RADIANS(#{userLatitude})) * COS(RADIANS(latitude)) * COS(RADIANS(longitude) - RADIANS(#{userLongitude})) + SIN(RADIANS(#{userLatitude})) * SIN(RADIANS(latitude)))) AS distance,
        cafeName, location, tel, cafePic, latitude, longitude, cafeId
        from cafe
        HAVING distance <![CDATA[ <= ]]> 1000

    </select>

    <select id="searchCafe">
        select
        ROUND(6371000  * ACOS(COS(RADIANS(#{userLatitude})) * COS(RADIANS(latitude)) * COS(RADIANS(longitude) - RADIANS(#{userLongitude})) + SIN(RADIANS(#{userLatitude})) * SIN(RADIANS(latitude)))) AS distance,
        cafeName, location, tel, cafePic, cafeId
        from cafe
        WHERE
        <if test="searchLocation != null and searchLocation != ''">
            location LIKE '%${searchLocation}%'
        </if>
        <if test="searchCafeName != null and searchCafeName != ''">
            cafeName Like '%${searchCafeName}%'
        </if>
        HAVING distance <![CDATA[ <= ]]> #{maxDistance}
    </select>

</mapper>