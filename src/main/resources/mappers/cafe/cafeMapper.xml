<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.ca2sa.cafe.CafeMapper">
    <update id="updCafe">
        UPDATE cafe
        <set>
            <if test="cafeName != null and cafeName != ''">
                cafeName = #{cafeName}
            </if>
            <if test="location != null and location != ''">
                ,location = #{location}
            </if>
            <if test="tel != null and tel != ''">
                ,tel = #{tel}
            </if>
            <if test="cafePic != null and cafePic != ''">
                ,cafePic = #{cafePic}
            </if>
            <if test="closeTime != null and closeTime != ''">
                ,closeTime = #{closeTime}
            </if>
            <if test="openTime != null and openTime != ''">
                ,openTime = #{openTime}
            </if>
            <if test="longitude != null">
                ,longitude = #{longitude}
            </if>
            <if test="latitude != null">
                ,latitude = #{latitude}
            </if>
        </set>
        WHERE cafeId = #{cafeId}
    </update>

    <insert id="insCafe" useGeneratedKeys="true" keyProperty="cafeId">
        INSERT INTO cafe
        SET

        cafeName = #{cafeName}, location = #{location}, tel = #{tel}, cafePic = #{cafePic},
        closeTime = #{closeTime}, openTime = #{openTime}, businessNumber = #{businessNumber},
        latitude = #{latitude}, longitude = #{longitude} , userId = #{userId}

    </insert>

    <select id="selCafe">
        SELECT
        cafeId, cafeName, location, tel, cafePic, openTime, closeTime, latitude, longitude
        FROM cafe
        where cafeId = #{cafeId}
    </select>

    <select id="selAllCafe">
        select
        cafeId, cafeName, location, tel, cafePic AS pic, latitude, longitude,
        ROUND(6371000  * ACOS(COS(RADIANS(#{userLatitude})) * COS(RADIANS(latitude)) * COS(RADIANS(longitude) - RADIANS(#{userLongitude})) + SIN(RADIANS(#{userLatitude})) * SIN(RADIANS(latitude)))) AS distance,
        openTime, closeTime
        from cafe
        HAVING distance <![CDATA[ <= ]]> 1000

    </select>

    <select id="searchCafe">
        select
        a.cafeId,
        cafeName, location, tel, cafePic AS pic, latitude, longitude,
        ROUND(6371000  * ACOS(COS(RADIANS(#{userLatitude})) * COS(RADIANS(latitude)) * COS(RADIANS(longitude) - RADIANS(#{userLongitude})) + SIN(RADIANS(#{userLatitude})) * SIN(RADIANS(latitude)))) AS distance,
        openTime, closeTime
        from cafe a
        left join menu b
        on a.cafeId = b.cafeId
        <if test="searchMenuName != null and searchMenuName != ''">
            WHERE
            menuName LIKE '%${searchMenuName}%'
        </if>
        <if test="searchCafeName != null and searchCafeName != ''">
            WHERE
            cafeName Like '%${searchCafeName}%'
        </if>
        GROUP BY a.cafeId
        HAVING distance <![CDATA[<=]]> #{maxDistance}
    </select>

</mapper>